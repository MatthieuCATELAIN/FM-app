{"ast":null,"code":"import\"./styles.css\";import axios from\"axios\";import React,{useState,useEffect}from\"react\";import Select from\"react-select\";import Formation from\"./components/formation\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formations=[{value:\"4-4-2\",label:\"4-4-2\"},{value:\"4-3-3\",label:\"4-3-3\"},{value:\"4-5-1\",label:\"4-5-1\"},{value:\"3-5-2\",label:\"3-5-2\"},{value:\"4-2-3-1\",label:\"4-2-3-1\"}];const players=[\"player0\",\"player1\",\"player2\",\"player3\",\"player4\",\"player5\",\"player6\",\"player7\",\"player8\",\"player9\",\"player10\"];function SquadBuildingPage(){const[selectedOption,setSelectedOption]=useState({value:\"4-4-2\",label:\"4-4-2\"});const formation=selectedOption.value;const[roleToPositionMapping,setRoleToPositionMapping]=useState({});const[bestTeam,setBestTeam]=useState(null);const[bestTeamRoles,setBestTeamRoles]=useState(null);const[savedFormation,setSavedFormation]=useState(\"\");const[teamAverage,setTeamAverage]=useState(null);useEffect(()=>{const fetchDataFormation=async()=>{try{const response=await axios.get('/get_formation_data');const fetchedFormation=response.data.formation;setSelectedOption({value:fetchedFormation,label:fetchedFormation});setSavedFormation(fetchedFormation);}catch(error){console.error('Error fetching formation data:',error);}};fetchDataFormation();},[]);const fetchDataTeam=async()=>{try{const response=await axios.get('/get_best_team_saved');const savedRoles=response.data.roles;if(savedFormation===formation){setBestTeam(response.data.team);setBestTeamRoles(savedRoles);players.forEach((player,index)=>handleRoleChange(player,savedRoles[\"player\".concat(index)]));calculateTeamAverage(response.data.team);}else{setBestTeam(null);setBestTeamRoles(null);setTeamAverage(null);}}catch(error){console.error('Error fetching team data:',error);}};useEffect(()=>{if(savedFormation){fetchDataTeam();}// eslint-disable-next-line\n},[savedFormation,formation]);const handlePostBestTeam=()=>{axios.post('/get_best_team',{selected_roles:roleToPositionMapping,formation:formation}).then(response=>{setBestTeam(response.data);fetchDataTeam();}).catch(error=>{console.error('Error fetching the best team:',error);});};const handleRoleChange=(player,newRole)=>{setRoleToPositionMapping(prevMapping=>({...prevMapping,[player]:newRole}));};const calculateTeamAverage=team=>{const playersArray=Object.values(team);const totalNotes=playersArray.reduce((total,player)=>total+parseFloat(player.Note||0),0);const average=totalNotes/playersArray.length;setTeamAverage(average.toFixed(2));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"formationSection\",children:/*#__PURE__*/_jsx(\"div\",{className:\"formationOverlay\",children:/*#__PURE__*/_jsx(Formation,{formation:formation,bestTeam:bestTeam,bestTeamRoles:bestTeamRoles,handleRoleChange:handleRoleChange})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"formationSelector\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Squad Builder\"}),/*#__PURE__*/_jsx(Select,{value:selectedOption,onChange:setSelectedOption,options:formations}),\"MOYENNE : \",teamAverage,/*#__PURE__*/_jsx(\"button\",{onClick:handlePostBestTeam,children:\"Get Best Team\"})]})]});}export default SquadBuildingPage;","map":{"version":3,"names":["axios","React","useState","useEffect","Select","Formation","jsx","_jsx","jsxs","_jsxs","formations","value","label","players","SquadBuildingPage","selectedOption","setSelectedOption","formation","roleToPositionMapping","setRoleToPositionMapping","bestTeam","setBestTeam","bestTeamRoles","setBestTeamRoles","savedFormation","setSavedFormation","teamAverage","setTeamAverage","fetchDataFormation","response","get","fetchedFormation","data","error","console","fetchDataTeam","savedRoles","roles","team","forEach","player","index","handleRoleChange","concat","calculateTeamAverage","handlePostBestTeam","post","selected_roles","then","catch","newRole","prevMapping","playersArray","Object","values","totalNotes","reduce","total","parseFloat","Note","average","length","toFixed","className","children","onChange","options","onClick"],"sources":["/home/student/python/FM-app/frontend/src/components/squad/squadbuild.js"],"sourcesContent":["import \"./styles.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport Formation from \"./components/formation\";\n\nconst formations = [\n  { value: \"4-4-2\", label: \"4-4-2\" },\n  { value: \"4-3-3\", label: \"4-3-3\" },\n  { value: \"4-5-1\", label: \"4-5-1\" },\n  { value: \"3-5-2\", label: \"3-5-2\" },\n  { value: \"4-2-3-1\", label: \"4-2-3-1\" }\n];\n\n\nconst players = [\n  \"player0\",\n  \"player1\",\n  \"player2\",\n  \"player3\",\n  \"player4\",\n  \"player5\",\n  \"player6\",\n  \"player7\",\n  \"player8\",\n  \"player9\",\n  \"player10\",\n];\n\n\nfunction SquadBuildingPage() {\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"4-4-2\",\n    label: \"4-4-2\"\n  });\n  const formation = selectedOption.value;\n\n  const [roleToPositionMapping, setRoleToPositionMapping] = useState({});\n  const [bestTeam, setBestTeam] = useState(null);\n  const [bestTeamRoles, setBestTeamRoles] = useState(null);\n  const [savedFormation, setSavedFormation] = useState(\"\");\n  const [teamAverage, setTeamAverage] = useState(null);\n\n  useEffect(() => {\n    const fetchDataFormation = async () => {\n      try {\n        const response = await axios.get('/get_formation_data');\n        const fetchedFormation = response.data.formation;\n        setSelectedOption({\n          value: fetchedFormation,\n          label: fetchedFormation\n        });\n        setSavedFormation(fetchedFormation);\n      } catch (error) {\n        console.error('Error fetching formation data:', error);\n      }\n    };\n\n    fetchDataFormation();\n  }, []);\n\n  const fetchDataTeam = async () => {\n    try {\n      const response = await axios.get('/get_best_team_saved');\n      const savedRoles = response.data.roles;\n      if (savedFormation === formation) {\n        setBestTeam(response.data.team);\n        setBestTeamRoles(savedRoles);\n        players.forEach((player, index) => handleRoleChange(player, savedRoles[`player${index}`]));\n        calculateTeamAverage(response.data.team);\n      } else {\n        setBestTeam(null)\n        setBestTeamRoles(null)\n        setTeamAverage(null);\n      }\n    } catch (error) {\n      console.error('Error fetching team data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (savedFormation) {\n      fetchDataTeam();\n    }\n    // eslint-disable-next-line\n  }, [savedFormation, formation]);\n\n  \n  const handlePostBestTeam = () => {\n    axios.post('/get_best_team', { selected_roles: roleToPositionMapping, formation: formation })\n      .then(response => {\n        setBestTeam(response.data);\n        fetchDataTeam();\n      })\n      .catch(error => {\n        console.error('Error fetching the best team:', error);\n      });\n  };\n\n  const handleRoleChange = (player, newRole) => {\n    setRoleToPositionMapping((prevMapping) => ({\n      ...prevMapping,\n      [player]: newRole,\n    }));\n  };\n\n  const calculateTeamAverage = (team) => {\n      const playersArray = Object.values(team);\n      const totalNotes = playersArray.reduce((total, player) => total + parseFloat(player.Note || 0), 0);\n      const average = totalNotes / playersArray.length;\n      setTeamAverage(average.toFixed(2)); \n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"formationSection\">\n        <div className=\"formationOverlay\">\n          <Formation\n            formation={formation}\n            bestTeam={bestTeam}\n            bestTeamRoles={bestTeamRoles}\n            handleRoleChange={handleRoleChange}\n          />\n        </div>\n      </div>\n\n      <div className=\"formationSelector\">\n        <p>Squad Builder</p>\n        <Select\n          value={selectedOption}\n          onChange={setSelectedOption}\n          options={formations}\n        />\n        MOYENNE : {teamAverage}\n        <button onClick={handlePostBestTeam}>Get Best Team</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SquadBuildingPage;\n"],"mappings":"AAAA,MAAO,cAAc,CACrB,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,UAAU,CAAG,CACjB,CAAEC,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAClC,CAAED,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAClC,CAAED,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAClC,CAAED,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAClC,CAAED,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,SAAU,CAAC,CACvC,CAGD,KAAM,CAAAC,OAAO,CAAG,CACd,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,UAAU,CACX,CAGD,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC3B,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGd,QAAQ,CAAC,CACnDS,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,OACT,CAAC,CAAC,CACF,KAAM,CAAAK,SAAS,CAAGF,cAAc,CAACJ,KAAK,CAEtC,KAAM,CAACO,qBAAqB,CAAEC,wBAAwB,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtE,KAAM,CAACkB,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACoB,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACwB,WAAW,CAAEC,cAAc,CAAC,CAAGzB,QAAQ,CAAC,IAAI,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAyB,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA7B,KAAK,CAAC8B,GAAG,CAAC,qBAAqB,CAAC,CACvD,KAAM,CAAAC,gBAAgB,CAAGF,QAAQ,CAACG,IAAI,CAACf,SAAS,CAChDD,iBAAiB,CAAC,CAChBL,KAAK,CAAEoB,gBAAgB,CACvBnB,KAAK,CAAEmB,gBACT,CAAC,CAAC,CACFN,iBAAiB,CAACM,gBAAgB,CAAC,CACrC,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAAC,CAEDL,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAA7B,KAAK,CAAC8B,GAAG,CAAC,sBAAsB,CAAC,CACxD,KAAM,CAAAM,UAAU,CAAGP,QAAQ,CAACG,IAAI,CAACK,KAAK,CACtC,GAAIb,cAAc,GAAKP,SAAS,CAAE,CAChCI,WAAW,CAACQ,QAAQ,CAACG,IAAI,CAACM,IAAI,CAAC,CAC/Bf,gBAAgB,CAACa,UAAU,CAAC,CAC5BvB,OAAO,CAAC0B,OAAO,CAAC,CAACC,MAAM,CAAEC,KAAK,GAAKC,gBAAgB,CAACF,MAAM,CAAEJ,UAAU,UAAAO,MAAA,CAAUF,KAAK,EAAG,CAAC,CAAC,CAC1FG,oBAAoB,CAACf,QAAQ,CAACG,IAAI,CAACM,IAAI,CAAC,CAC1C,CAAC,IAAM,CACLjB,WAAW,CAAC,IAAI,CAAC,CACjBE,gBAAgB,CAAC,IAAI,CAAC,CACtBI,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAED9B,SAAS,CAAC,IAAM,CACd,GAAIqB,cAAc,CAAE,CAClBW,aAAa,CAAC,CAAC,CACjB,CACA;AACF,CAAC,CAAE,CAACX,cAAc,CAAEP,SAAS,CAAC,CAAC,CAG/B,KAAM,CAAA4B,kBAAkB,CAAGA,CAAA,GAAM,CAC/B7C,KAAK,CAAC8C,IAAI,CAAC,gBAAgB,CAAE,CAAEC,cAAc,CAAE7B,qBAAqB,CAAED,SAAS,CAAEA,SAAU,CAAC,CAAC,CAC1F+B,IAAI,CAACnB,QAAQ,EAAI,CAChBR,WAAW,CAACQ,QAAQ,CAACG,IAAI,CAAC,CAC1BG,aAAa,CAAC,CAAC,CACjB,CAAC,CAAC,CACDc,KAAK,CAAChB,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACvD,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAS,gBAAgB,CAAGA,CAACF,MAAM,CAAEU,OAAO,GAAK,CAC5C/B,wBAAwB,CAAEgC,WAAW,GAAM,CACzC,GAAGA,WAAW,CACd,CAACX,MAAM,EAAGU,OACZ,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAN,oBAAoB,CAAIN,IAAI,EAAK,CACnC,KAAM,CAAAc,YAAY,CAAGC,MAAM,CAACC,MAAM,CAAChB,IAAI,CAAC,CACxC,KAAM,CAAAiB,UAAU,CAAGH,YAAY,CAACI,MAAM,CAAC,CAACC,KAAK,CAAEjB,MAAM,GAAKiB,KAAK,CAAGC,UAAU,CAAClB,MAAM,CAACmB,IAAI,EAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAClG,KAAM,CAAAC,OAAO,CAAGL,UAAU,CAAGH,YAAY,CAACS,MAAM,CAChDlC,cAAc,CAACiC,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC,CAED,mBACErD,KAAA,QAAKsD,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBzD,IAAA,QAAKwD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BzD,IAAA,QAAKwD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BzD,IAAA,CAACF,SAAS,EACRY,SAAS,CAAEA,SAAU,CACrBG,QAAQ,CAAEA,QAAS,CACnBE,aAAa,CAAEA,aAAc,CAC7BoB,gBAAgB,CAAEA,gBAAiB,CACpC,CAAC,CACC,CAAC,CACH,CAAC,cAENjC,KAAA,QAAKsD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCzD,IAAA,MAAAyD,QAAA,CAAG,eAAa,CAAG,CAAC,cACpBzD,IAAA,CAACH,MAAM,EACLO,KAAK,CAAEI,cAAe,CACtBkD,QAAQ,CAAEjD,iBAAkB,CAC5BkD,OAAO,CAAExD,UAAW,CACrB,CAAC,aACQ,CAACgB,WAAW,cACtBnB,IAAA,WAAQ4D,OAAO,CAAEtB,kBAAmB,CAAAmB,QAAA,CAAC,eAAa,CAAQ,CAAC,EACxD,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAlD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}