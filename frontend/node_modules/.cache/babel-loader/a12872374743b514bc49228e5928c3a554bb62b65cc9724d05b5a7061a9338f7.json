{"ast":null,"code":"var _jsxFileName = \"/home/student/python/FM-app/frontend/src/components/squad/squadbuild.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport Formation from \"./components/formation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formations = [{\n  value: \"4-4-2\",\n  label: \"4-4-2\"\n}, {\n  value: \"4-3-3\",\n  label: \"4-3-3\"\n}, {\n  value: \"4-5-1\",\n  label: \"4-5-1\"\n}, {\n  value: \"3-5-2\",\n  label: \"3-5-2\"\n}, {\n  value: \"4-2-3-1\",\n  label: \"4-2-3-1\"\n}];\nconst players = [\"player0\", \"player1\", \"player2\", \"player3\", \"player4\", \"player5\", \"player6\", \"player7\", \"player8\", \"player9\", \"player10\"];\nfunction SquadBuildingPage() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"4-4-2\",\n    label: \"4-4-2\"\n  });\n  const formation = selectedOption.value;\n  const [roleToPositionMapping, setRoleToPositionMapping] = useState({});\n  const [bestTeam, setBestTeam] = useState(null);\n  const [bestTeamRoles, setBestTeamRoles] = useState(null);\n  const [savedFormation, setSavedFormation] = useState(\"\");\n  const [teamAverage, setTeamAverage] = useState(null);\n  useEffect(() => {\n    const fetchDataFormation = async () => {\n      try {\n        const response = await axios.get('/get_formation_data');\n        const fetchedFormation = response.data.formation;\n        setSelectedOption({\n          value: fetchedFormation,\n          label: fetchedFormation\n        });\n        setSavedFormation(fetchedFormation);\n      } catch (error) {\n        console.error('Error fetching formation data:', error);\n      }\n    };\n    fetchDataFormation();\n  }, []);\n  useEffect(() => {\n    const fetchDataTeam = async () => {\n      try {\n        const response = await axios.get('/get_best_team_saved');\n        const savedRoles = response.data.roles;\n        if (savedFormation === formation) {\n          setBestTeam(response.data.team);\n          setBestTeamRoles(savedRoles);\n          players.forEach((player, index) => handleRoleChange(player, savedRoles[`player${index}`]));\n          calculateTeamAverage(response.data.team);\n        } else {\n          setBestTeam(null);\n          setBestTeamRoles(null);\n          setTeamAverage(null);\n        }\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      }\n    };\n    if (savedFormation) {\n      fetchDataTeam();\n    }\n  }, [savedFormation, formation, handlePostBestTeam]);\n  const handlePostBestTeam = () => {\n    axios.post('/get_best_team', {\n      selected_roles: roleToPositionMapping,\n      formation: formation\n    }).then(response => {\n      console.log(\"best team\");\n      setBestTeam(response.data);\n    }).catch(error => {\n      console.error('Error fetching the best team:', error);\n    });\n  };\n  const handleRoleChange = (player, newRole) => {\n    setRoleToPositionMapping(prevMapping => ({\n      ...prevMapping,\n      [player]: newRole\n    }));\n  };\n  const calculateTeamAverage = team => {\n    const playersArray = Object.values(team);\n    const totalNotes = playersArray.reduce((total, player) => total + parseFloat(player.Note || 0), 0);\n    const average = totalNotes / playersArray.length;\n    setTeamAverage(average.toFixed(2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formationSection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formationOverlay\",\n        children: /*#__PURE__*/_jsxDEV(Formation, {\n          formation: formation,\n          bestTeam: bestTeam,\n          bestTeamRoles: bestTeamRoles,\n          handleRoleChange: handleRoleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formationSelector\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Squad Builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedOption,\n        onChange: setSelectedOption,\n        options: formations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), \"MOYENNE : \", teamAverage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePostBestTeam,\n        children: \"Get Best Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(SquadBuildingPage, \"uN6a6NQ298cxhmlsCIP39bIgkTs=\");\n_c = SquadBuildingPage;\nexport default SquadBuildingPage;\nvar _c;\n$RefreshReg$(_c, \"SquadBuildingPage\");","map":{"version":3,"names":["axios","React","useState","useEffect","Select","Formation","jsxDEV","_jsxDEV","formations","value","label","players","SquadBuildingPage","_s","selectedOption","setSelectedOption","formation","roleToPositionMapping","setRoleToPositionMapping","bestTeam","setBestTeam","bestTeamRoles","setBestTeamRoles","savedFormation","setSavedFormation","teamAverage","setTeamAverage","fetchDataFormation","response","get","fetchedFormation","data","error","console","fetchDataTeam","savedRoles","roles","team","forEach","player","index","handleRoleChange","calculateTeamAverage","handlePostBestTeam","post","selected_roles","then","log","catch","newRole","prevMapping","playersArray","Object","values","totalNotes","reduce","total","parseFloat","Note","average","length","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","onClick","_c","$RefreshReg$"],"sources":["/home/student/python/FM-app/frontend/src/components/squad/squadbuild.js"],"sourcesContent":["import \"./styles.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport Formation from \"./components/formation\";\n\nconst formations = [\n  { value: \"4-4-2\", label: \"4-4-2\" },\n  { value: \"4-3-3\", label: \"4-3-3\" },\n  { value: \"4-5-1\", label: \"4-5-1\" },\n  { value: \"3-5-2\", label: \"3-5-2\" },\n  { value: \"4-2-3-1\", label: \"4-2-3-1\" }\n];\n\n\nconst players = [\n  \"player0\",\n  \"player1\",\n  \"player2\",\n  \"player3\",\n  \"player4\",\n  \"player5\",\n  \"player6\",\n  \"player7\",\n  \"player8\",\n  \"player9\",\n  \"player10\",\n];\n\n\nfunction SquadBuildingPage() {\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"4-4-2\",\n    label: \"4-4-2\"\n  });\n  const formation = selectedOption.value;\n\n  const [roleToPositionMapping, setRoleToPositionMapping] = useState({});\n  const [bestTeam, setBestTeam] = useState(null);\n  const [bestTeamRoles, setBestTeamRoles] = useState(null);\n  const [savedFormation, setSavedFormation] = useState(\"\");\n  const [teamAverage, setTeamAverage] = useState(null);\n\n  useEffect(() => {\n    const fetchDataFormation = async () => {\n      try {\n        const response = await axios.get('/get_formation_data');\n        const fetchedFormation = response.data.formation;\n        setSelectedOption({\n          value: fetchedFormation,\n          label: fetchedFormation\n        });\n        setSavedFormation(fetchedFormation);\n      } catch (error) {\n        console.error('Error fetching formation data:', error);\n      }\n    };\n\n    fetchDataFormation();\n  }, []);\n\n  useEffect(() => {\n    const fetchDataTeam = async () => {\n      try {\n        const response = await axios.get('/get_best_team_saved');\n        const savedRoles = response.data.roles;\n        if (savedFormation === formation) {\n          setBestTeam(response.data.team);\n          setBestTeamRoles(savedRoles);\n          players.forEach((player, index) => handleRoleChange(player, savedRoles[`player${index}`]));\n          calculateTeamAverage(response.data.team);\n        } else {\n          setBestTeam(null)\n          setBestTeamRoles(null)\n          setTeamAverage(null);\n        }\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      }\n    };\n\n    if (savedFormation) {\n      fetchDataTeam();\n    }\n  }, [savedFormation, formation, handlePostBestTeam]);\n\n  \n  const handlePostBestTeam = () => {\n    axios.post('/get_best_team', { selected_roles: roleToPositionMapping, formation: formation })\n      .then(response => {\n        console.log(\"best team\")\n        setBestTeam(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching the best team:', error);\n      });\n  };\n\n  const handleRoleChange = (player, newRole) => {\n    setRoleToPositionMapping((prevMapping) => ({\n      ...prevMapping,\n      [player]: newRole,\n    }));\n  };\n\n  const calculateTeamAverage = (team) => {\n      const playersArray = Object.values(team);\n      const totalNotes = playersArray.reduce((total, player) => total + parseFloat(player.Note || 0), 0);\n      const average = totalNotes / playersArray.length;\n      setTeamAverage(average.toFixed(2)); \n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"formationSection\">\n        <div className=\"formationOverlay\">\n          <Formation\n            formation={formation}\n            bestTeam={bestTeam}\n            bestTeamRoles={bestTeamRoles}\n            handleRoleChange={handleRoleChange}\n          />\n        </div>\n      </div>\n\n      <div className=\"formationSelector\">\n        <p>Squad Builder</p>\n        <Select\n          value={selectedOption}\n          onChange={setSelectedOption}\n          options={formations}\n        />\n        MOYENNE : {teamAverage}\n        <button onClick={handlePostBestTeam}>Get Best Team</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SquadBuildingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}